// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/builtin_service.proto

#include "brpc/builtin_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace brpc {
PROTOBUF_CONSTEXPR IndexRequest::IndexRequest(
    ::_pbi::ConstantInitialized) {}
struct IndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexRequestDefaultTypeInternal() {}
  union {
    IndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexRequestDefaultTypeInternal _IndexRequest_default_instance_;
PROTOBUF_CONSTEXPR IndexResponse::IndexResponse(
    ::_pbi::ConstantInitialized) {}
struct IndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexResponseDefaultTypeInternal() {}
  union {
    IndexResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexResponseDefaultTypeInternal _IndexResponse_default_instance_;
PROTOBUF_CONSTEXPR FlagsRequest::FlagsRequest(
    ::_pbi::ConstantInitialized) {}
struct FlagsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlagsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlagsRequestDefaultTypeInternal() {}
  union {
    FlagsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlagsRequestDefaultTypeInternal _FlagsRequest_default_instance_;
PROTOBUF_CONSTEXPR FlagsResponse::FlagsResponse(
    ::_pbi::ConstantInitialized) {}
struct FlagsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlagsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlagsResponseDefaultTypeInternal() {}
  union {
    FlagsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlagsResponseDefaultTypeInternal _FlagsResponse_default_instance_;
PROTOBUF_CONSTEXPR VersionRequest::VersionRequest(
    ::_pbi::ConstantInitialized) {}
struct VersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionRequestDefaultTypeInternal() {}
  union {
    VersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionRequestDefaultTypeInternal _VersionRequest_default_instance_;
PROTOBUF_CONSTEXPR VersionResponse::VersionResponse(
    ::_pbi::ConstantInitialized) {}
struct VersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionResponseDefaultTypeInternal() {}
  union {
    VersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionResponseDefaultTypeInternal _VersionResponse_default_instance_;
PROTOBUF_CONSTEXPR HealthRequest::HealthRequest(
    ::_pbi::ConstantInitialized) {}
struct HealthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthRequestDefaultTypeInternal() {}
  union {
    HealthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthRequestDefaultTypeInternal _HealthRequest_default_instance_;
PROTOBUF_CONSTEXPR HealthResponse::HealthResponse(
    ::_pbi::ConstantInitialized) {}
struct HealthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthResponseDefaultTypeInternal() {}
  union {
    HealthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthResponseDefaultTypeInternal _HealthResponse_default_instance_;
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(
    ::_pbi::ConstantInitialized) {}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(
    ::_pbi::ConstantInitialized) {}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
PROTOBUF_CONSTEXPR ProtobufsRequest::ProtobufsRequest(
    ::_pbi::ConstantInitialized) {}
struct ProtobufsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufsRequestDefaultTypeInternal() {}
  union {
    ProtobufsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufsRequestDefaultTypeInternal _ProtobufsRequest_default_instance_;
PROTOBUF_CONSTEXPR ProtobufsResponse::ProtobufsResponse(
    ::_pbi::ConstantInitialized) {}
struct ProtobufsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufsResponseDefaultTypeInternal() {}
  union {
    ProtobufsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufsResponseDefaultTypeInternal _ProtobufsResponse_default_instance_;
PROTOBUF_CONSTEXPR ConnectionsRequest::ConnectionsRequest(
    ::_pbi::ConstantInitialized) {}
struct ConnectionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionsRequestDefaultTypeInternal() {}
  union {
    ConnectionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionsRequestDefaultTypeInternal _ConnectionsRequest_default_instance_;
PROTOBUF_CONSTEXPR ConnectionsResponse::ConnectionsResponse(
    ::_pbi::ConstantInitialized) {}
struct ConnectionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionsResponseDefaultTypeInternal() {}
  union {
    ConnectionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionsResponseDefaultTypeInternal _ConnectionsResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRequest::ListRequest(
    ::_pbi::ConstantInitialized) {}
struct ListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRequestDefaultTypeInternal() {}
  union {
    ListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRequestDefaultTypeInternal _ListRequest_default_instance_;
PROTOBUF_CONSTEXPR ListResponse::ListResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.service_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListResponseDefaultTypeInternal() {}
  union {
    ListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListResponseDefaultTypeInternal _ListResponse_default_instance_;
PROTOBUF_CONSTEXPR VarsRequest::VarsRequest(
    ::_pbi::ConstantInitialized) {}
struct VarsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VarsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VarsRequestDefaultTypeInternal() {}
  union {
    VarsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VarsRequestDefaultTypeInternal _VarsRequest_default_instance_;
PROTOBUF_CONSTEXPR VarsResponse::VarsResponse(
    ::_pbi::ConstantInitialized) {}
struct VarsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VarsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VarsResponseDefaultTypeInternal() {}
  union {
    VarsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VarsResponseDefaultTypeInternal _VarsResponse_default_instance_;
PROTOBUF_CONSTEXPR BthreadsRequest::BthreadsRequest(
    ::_pbi::ConstantInitialized) {}
struct BthreadsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BthreadsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BthreadsRequestDefaultTypeInternal() {}
  union {
    BthreadsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BthreadsRequestDefaultTypeInternal _BthreadsRequest_default_instance_;
PROTOBUF_CONSTEXPR BthreadsResponse::BthreadsResponse(
    ::_pbi::ConstantInitialized) {}
struct BthreadsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BthreadsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BthreadsResponseDefaultTypeInternal() {}
  union {
    BthreadsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BthreadsResponseDefaultTypeInternal _BthreadsResponse_default_instance_;
PROTOBUF_CONSTEXPR IdsRequest::IdsRequest(
    ::_pbi::ConstantInitialized) {}
struct IdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdsRequestDefaultTypeInternal() {}
  union {
    IdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdsRequestDefaultTypeInternal _IdsRequest_default_instance_;
PROTOBUF_CONSTEXPR IdsResponse::IdsResponse(
    ::_pbi::ConstantInitialized) {}
struct IdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdsResponseDefaultTypeInternal() {}
  union {
    IdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdsResponseDefaultTypeInternal _IdsResponse_default_instance_;
PROTOBUF_CONSTEXPR SocketsRequest::SocketsRequest(
    ::_pbi::ConstantInitialized) {}
struct SocketsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketsRequestDefaultTypeInternal() {}
  union {
    SocketsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketsRequestDefaultTypeInternal _SocketsRequest_default_instance_;
PROTOBUF_CONSTEXPR SocketsResponse::SocketsResponse(
    ::_pbi::ConstantInitialized) {}
struct SocketsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketsResponseDefaultTypeInternal() {}
  union {
    SocketsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketsResponseDefaultTypeInternal _SocketsResponse_default_instance_;
PROTOBUF_CONSTEXPR RpczRequest::RpczRequest(
    ::_pbi::ConstantInitialized) {}
struct RpczRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpczRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpczRequestDefaultTypeInternal() {}
  union {
    RpczRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpczRequestDefaultTypeInternal _RpczRequest_default_instance_;
PROTOBUF_CONSTEXPR RpczResponse::RpczResponse(
    ::_pbi::ConstantInitialized) {}
struct RpczResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpczResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpczResponseDefaultTypeInternal() {}
  union {
    RpczResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpczResponseDefaultTypeInternal _RpczResponse_default_instance_;
PROTOBUF_CONSTEXPR ThreadsRequest::ThreadsRequest(
    ::_pbi::ConstantInitialized) {}
struct ThreadsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThreadsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThreadsRequestDefaultTypeInternal() {}
  union {
    ThreadsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThreadsRequestDefaultTypeInternal _ThreadsRequest_default_instance_;
PROTOBUF_CONSTEXPR ThreadsResponse::ThreadsResponse(
    ::_pbi::ConstantInitialized) {}
struct ThreadsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThreadsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThreadsResponseDefaultTypeInternal() {}
  union {
    ThreadsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThreadsResponseDefaultTypeInternal _ThreadsResponse_default_instance_;
PROTOBUF_CONSTEXPR DirRequest::DirRequest(
    ::_pbi::ConstantInitialized) {}
struct DirRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DirRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DirRequestDefaultTypeInternal() {}
  union {
    DirRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DirRequestDefaultTypeInternal _DirRequest_default_instance_;
PROTOBUF_CONSTEXPR DirResponse::DirResponse(
    ::_pbi::ConstantInitialized) {}
struct DirResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DirResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DirResponseDefaultTypeInternal() {}
  union {
    DirResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DirResponseDefaultTypeInternal _DirResponse_default_instance_;
PROTOBUF_CONSTEXPR VLogRequest::VLogRequest(
    ::_pbi::ConstantInitialized) {}
struct VLogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VLogRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VLogRequestDefaultTypeInternal() {}
  union {
    VLogRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VLogRequestDefaultTypeInternal _VLogRequest_default_instance_;
PROTOBUF_CONSTEXPR VLogResponse::VLogResponse(
    ::_pbi::ConstantInitialized) {}
struct VLogResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VLogResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VLogResponseDefaultTypeInternal() {}
  union {
    VLogResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VLogResponseDefaultTypeInternal _VLogResponse_default_instance_;
PROTOBUF_CONSTEXPR MetricsRequest::MetricsRequest(
    ::_pbi::ConstantInitialized) {}
struct MetricsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsRequestDefaultTypeInternal() {}
  union {
    MetricsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsRequestDefaultTypeInternal _MetricsRequest_default_instance_;
PROTOBUF_CONSTEXPR MetricsResponse::MetricsResponse(
    ::_pbi::ConstantInitialized) {}
struct MetricsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsResponseDefaultTypeInternal() {}
  union {
    MetricsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsResponseDefaultTypeInternal _MetricsResponse_default_instance_;
PROTOBUF_CONSTEXPR BadMethodRequest::BadMethodRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.service_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct BadMethodRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BadMethodRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BadMethodRequestDefaultTypeInternal() {}
  union {
    BadMethodRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BadMethodRequestDefaultTypeInternal _BadMethodRequest_default_instance_;
PROTOBUF_CONSTEXPR BadMethodResponse::BadMethodResponse(
    ::_pbi::ConstantInitialized) {}
struct BadMethodResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BadMethodResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BadMethodResponseDefaultTypeInternal() {}
  union {
    BadMethodResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BadMethodResponseDefaultTypeInternal _BadMethodResponse_default_instance_;
PROTOBUF_CONSTEXPR ProfileRequest::ProfileRequest(
    ::_pbi::ConstantInitialized) {}
struct ProfileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProfileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProfileRequestDefaultTypeInternal() {}
  union {
    ProfileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProfileRequestDefaultTypeInternal _ProfileRequest_default_instance_;
PROTOBUF_CONSTEXPR ProfileResponse::ProfileResponse(
    ::_pbi::ConstantInitialized) {}
struct ProfileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProfileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProfileResponseDefaultTypeInternal() {}
  union {
    ProfileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProfileResponseDefaultTypeInternal _ProfileResponse_default_instance_;
PROTOBUF_CONSTEXPR HotspotsRequest::HotspotsRequest(
    ::_pbi::ConstantInitialized) {}
struct HotspotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HotspotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HotspotsRequestDefaultTypeInternal() {}
  union {
    HotspotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HotspotsRequestDefaultTypeInternal _HotspotsRequest_default_instance_;
PROTOBUF_CONSTEXPR HotspotsResponse::HotspotsResponse(
    ::_pbi::ConstantInitialized) {}
struct HotspotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HotspotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HotspotsResponseDefaultTypeInternal() {}
  union {
    HotspotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HotspotsResponseDefaultTypeInternal _HotspotsResponse_default_instance_;
}  // namespace brpc
static ::_pb::Metadata file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[40];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_brpc_2fbuiltin_5fservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[20];

const uint32_t TableStruct_brpc_2fbuiltin_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::IndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::IndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::FlagsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::FlagsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::HealthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::HealthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::StatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ProtobufsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ProtobufsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ConnectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::brpc::ListResponse, _impl_.service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VarsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VarsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::BthreadsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::BthreadsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::IdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::IdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::SocketsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::SocketsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::RpczRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::RpczResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ThreadsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ThreadsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::DirRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::DirResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::VLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::MetricsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::MetricsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::brpc::BadMethodRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::brpc::BadMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::brpc::BadMethodRequest, _impl_.service_name_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::BadMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::ProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::HotspotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::brpc::HotspotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::brpc::IndexRequest)},
  { 6, -1, -1, sizeof(::brpc::IndexResponse)},
  { 12, -1, -1, sizeof(::brpc::FlagsRequest)},
  { 18, -1, -1, sizeof(::brpc::FlagsResponse)},
  { 24, -1, -1, sizeof(::brpc::VersionRequest)},
  { 30, -1, -1, sizeof(::brpc::VersionResponse)},
  { 36, -1, -1, sizeof(::brpc::HealthRequest)},
  { 42, -1, -1, sizeof(::brpc::HealthResponse)},
  { 48, -1, -1, sizeof(::brpc::StatusRequest)},
  { 54, -1, -1, sizeof(::brpc::StatusResponse)},
  { 60, -1, -1, sizeof(::brpc::ProtobufsRequest)},
  { 66, -1, -1, sizeof(::brpc::ProtobufsResponse)},
  { 72, -1, -1, sizeof(::brpc::ConnectionsRequest)},
  { 78, -1, -1, sizeof(::brpc::ConnectionsResponse)},
  { 84, -1, -1, sizeof(::brpc::ListRequest)},
  { 90, -1, -1, sizeof(::brpc::ListResponse)},
  { 97, -1, -1, sizeof(::brpc::VarsRequest)},
  { 103, -1, -1, sizeof(::brpc::VarsResponse)},
  { 109, -1, -1, sizeof(::brpc::BthreadsRequest)},
  { 115, -1, -1, sizeof(::brpc::BthreadsResponse)},
  { 121, -1, -1, sizeof(::brpc::IdsRequest)},
  { 127, -1, -1, sizeof(::brpc::IdsResponse)},
  { 133, -1, -1, sizeof(::brpc::SocketsRequest)},
  { 139, -1, -1, sizeof(::brpc::SocketsResponse)},
  { 145, -1, -1, sizeof(::brpc::RpczRequest)},
  { 151, -1, -1, sizeof(::brpc::RpczResponse)},
  { 157, -1, -1, sizeof(::brpc::ThreadsRequest)},
  { 163, -1, -1, sizeof(::brpc::ThreadsResponse)},
  { 169, -1, -1, sizeof(::brpc::DirRequest)},
  { 175, -1, -1, sizeof(::brpc::DirResponse)},
  { 181, -1, -1, sizeof(::brpc::VLogRequest)},
  { 187, -1, -1, sizeof(::brpc::VLogResponse)},
  { 193, -1, -1, sizeof(::brpc::MetricsRequest)},
  { 199, -1, -1, sizeof(::brpc::MetricsResponse)},
  { 205, 212, -1, sizeof(::brpc::BadMethodRequest)},
  { 213, -1, -1, sizeof(::brpc::BadMethodResponse)},
  { 219, -1, -1, sizeof(::brpc::ProfileRequest)},
  { 225, -1, -1, sizeof(::brpc::ProfileResponse)},
  { 231, -1, -1, sizeof(::brpc::HotspotsRequest)},
  { 237, -1, -1, sizeof(::brpc::HotspotsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::brpc::_IndexRequest_default_instance_._instance,
  &::brpc::_IndexResponse_default_instance_._instance,
  &::brpc::_FlagsRequest_default_instance_._instance,
  &::brpc::_FlagsResponse_default_instance_._instance,
  &::brpc::_VersionRequest_default_instance_._instance,
  &::brpc::_VersionResponse_default_instance_._instance,
  &::brpc::_HealthRequest_default_instance_._instance,
  &::brpc::_HealthResponse_default_instance_._instance,
  &::brpc::_StatusRequest_default_instance_._instance,
  &::brpc::_StatusResponse_default_instance_._instance,
  &::brpc::_ProtobufsRequest_default_instance_._instance,
  &::brpc::_ProtobufsResponse_default_instance_._instance,
  &::brpc::_ConnectionsRequest_default_instance_._instance,
  &::brpc::_ConnectionsResponse_default_instance_._instance,
  &::brpc::_ListRequest_default_instance_._instance,
  &::brpc::_ListResponse_default_instance_._instance,
  &::brpc::_VarsRequest_default_instance_._instance,
  &::brpc::_VarsResponse_default_instance_._instance,
  &::brpc::_BthreadsRequest_default_instance_._instance,
  &::brpc::_BthreadsResponse_default_instance_._instance,
  &::brpc::_IdsRequest_default_instance_._instance,
  &::brpc::_IdsResponse_default_instance_._instance,
  &::brpc::_SocketsRequest_default_instance_._instance,
  &::brpc::_SocketsResponse_default_instance_._instance,
  &::brpc::_RpczRequest_default_instance_._instance,
  &::brpc::_RpczResponse_default_instance_._instance,
  &::brpc::_ThreadsRequest_default_instance_._instance,
  &::brpc::_ThreadsResponse_default_instance_._instance,
  &::brpc::_DirRequest_default_instance_._instance,
  &::brpc::_DirResponse_default_instance_._instance,
  &::brpc::_VLogRequest_default_instance_._instance,
  &::brpc::_VLogResponse_default_instance_._instance,
  &::brpc::_MetricsRequest_default_instance_._instance,
  &::brpc::_MetricsResponse_default_instance_._instance,
  &::brpc::_BadMethodRequest_default_instance_._instance,
  &::brpc::_BadMethodResponse_default_instance_._instance,
  &::brpc::_ProfileRequest_default_instance_._instance,
  &::brpc::_ProfileResponse_default_instance_._instance,
  &::brpc::_HotspotsRequest_default_instance_._instance,
  &::brpc::_HotspotsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_brpc_2fbuiltin_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032brpc/builtin_service.proto\022\004brpc\032 goog"
  "le/protobuf/descriptor.proto\"\016\n\014IndexReq"
  "uest\"\017\n\rIndexResponse\"\016\n\014FlagsRequest\"\017\n"
  "\rFlagsResponse\"\020\n\016VersionRequest\"\021\n\017Vers"
  "ionResponse\"\017\n\rHealthRequest\"\020\n\016HealthRe"
  "sponse\"\017\n\rStatusRequest\"\020\n\016StatusRespons"
  "e\"\022\n\020ProtobufsRequest\"\023\n\021ProtobufsRespon"
  "se\"\024\n\022ConnectionsRequest\"\025\n\023ConnectionsR"
  "esponse\"\r\n\013ListRequest\"H\n\014ListResponse\0228"
  "\n\007service\030\001 \003(\0132\'.google.protobuf.Servic"
  "eDescriptorProto\"\r\n\013VarsRequest\"\016\n\014VarsR"
  "esponse\"\021\n\017BthreadsRequest\"\022\n\020BthreadsRe"
  "sponse\"\014\n\nIdsRequest\"\r\n\013IdsResponse\"\020\n\016S"
  "ocketsRequest\"\021\n\017SocketsResponse\"\r\n\013Rpcz"
  "Request\"\016\n\014RpczResponse\"\020\n\016ThreadsReques"
  "t\"\021\n\017ThreadsResponse\"\014\n\nDirRequest\"\r\n\013Di"
  "rResponse\"\r\n\013VLogRequest\"\016\n\014VLogResponse"
  "\"\020\n\016MetricsRequest\"\021\n\017MetricsResponse\"(\n"
  "\020BadMethodRequest\022\024\n\014service_name\030\001 \002(\t\""
  "\023\n\021BadMethodResponse\"\020\n\016ProfileRequest\"\021"
  "\n\017ProfileResponse\"\021\n\017HotspotsRequest\"\022\n\020"
  "HotspotsResponse2B\n\005index\0229\n\016default_met"
  "hod\022\022.brpc.IndexRequest\032\023.brpc.IndexResp"
  "onse2H\n\007version\022=\n\016default_method\022\024.brpc"
  ".VersionRequest\032\025.brpc.VersionResponse2E"
  "\n\006health\022;\n\016default_method\022\023.brpc.Health"
  "Request\032\024.brpc.HealthResponse2E\n\006status\022"
  ";\n\016default_method\022\023.brpc.StatusRequest\032\024"
  ".brpc.StatusResponse2N\n\tprotobufs\022A\n\016def"
  "ault_method\022\026.brpc.ProtobufsRequest\032\027.br"
  "pc.ProtobufsResponse2T\n\013connections\022E\n\016d"
  "efault_method\022\030.brpc.ConnectionsRequest\032"
  "\031.brpc.ConnectionsResponse2\?\n\004list\0227\n\016de"
  "fault_method\022\021.brpc.ListRequest\032\022.brpc.L"
  "istResponse2H\n\007threads\022=\n\016default_method"
  "\022\024.brpc.ThreadsRequest\032\025.brpc.ThreadsRes"
  "ponse2\?\n\004vlog\0227\n\016default_method\022\021.brpc.V"
  "LogRequest\032\022.brpc.VLogResponse2K\n\010bthrea"
  "ds\022\?\n\016default_method\022\025.brpc.BthreadsRequ"
  "est\032\026.brpc.BthreadsResponse2<\n\003ids\0225\n\016de"
  "fault_method\022\020.brpc.IdsRequest\032\021.brpc.Id"
  "sResponse2H\n\007sockets\022=\n\016default_method\022\024"
  ".brpc.SocketsRequest\032\025.brpc.SocketsRespo"
  "nse2M\n\014brpc_metrics\022=\n\016default_method\022\024."
  "brpc.MetricsRequest\032\025.brpc.MetricsRespon"
  "se2I\n\tbadmethod\022<\n\tno_method\022\026.brpc.BadM"
  "ethodRequest\032\027.brpc.BadMethodResponse2\325\002"
  "\n\005pprof\0226\n\007profile\022\024.brpc.ProfileRequest"
  "\032\025.brpc.ProfileResponse\0229\n\ncontention\022\024."
  "brpc.ProfileRequest\032\025.brpc.ProfileRespon"
  "se\0223\n\004heap\022\024.brpc.ProfileRequest\032\025.brpc."
  "ProfileResponse\0225\n\006symbol\022\024.brpc.Profile"
  "Request\032\025.brpc.ProfileResponse\0226\n\007cmdlin"
  "e\022\024.brpc.ProfileRequest\032\025.brpc.ProfileRe"
  "sponse\0225\n\006growth\022\024.brpc.ProfileRequest\032\025"
  ".brpc.ProfileResponse2\214\004\n\010hotspots\0224\n\003cp"
  "u\022\025.brpc.HotspotsRequest\032\026.brpc.Hotspots"
  "Response\022C\n\022cpu_non_responsive\022\025.brpc.Ho"
  "tspotsRequest\032\026.brpc.HotspotsResponse\0225\n"
  "\004heap\022\025.brpc.HotspotsRequest\032\026.brpc.Hots"
  "potsResponse\022D\n\023heap_non_responsive\022\025.br"
  "pc.HotspotsRequest\032\026.brpc.HotspotsRespon"
  "se\0227\n\006growth\022\025.brpc.HotspotsRequest\032\026.br"
  "pc.HotspotsResponse\022F\n\025growth_non_respon"
  "sive\022\025.brpc.HotspotsRequest\032\026.brpc.Hotsp"
  "otsResponse\022;\n\ncontention\022\025.brpc.Hotspot"
  "sRequest\032\026.brpc.HotspotsResponse\022J\n\031cont"
  "ention_non_responsive\022\025.brpc.HotspotsReq"
  "uest\032\026.brpc.HotspotsResponse2B\n\005flags\0229\n"
  "\016default_method\022\022.brpc.FlagsRequest\032\023.br"
  "pc.FlagsResponse2\?\n\004vars\0227\n\016default_meth"
  "od\022\021.brpc.VarsRequest\032\022.brpc.VarsRespons"
  "e2\274\002\n\004rpcz\022/\n\006enable\022\021.brpc.RpczRequest\032"
  "\022.brpc.RpczResponse\0220\n\007disable\022\021.brpc.Rp"
  "czRequest\032\022.brpc.RpczResponse\022.\n\005stats\022\021"
  ".brpc.RpczRequest\032\022.brpc.RpczResponse\0223\n"
  "\nhex_log_id\022\021.brpc.RpczRequest\032\022.brpc.Rp"
  "czResponse\0223\n\ndec_log_id\022\021.brpc.RpczRequ"
  "est\032\022.brpc.RpczResponse\0227\n\016default_metho"
  "d\022\021.brpc.RpczRequest\032\022.brpc.RpczResponse"
  "2<\n\003dir\0225\n\016default_method\022\020.brpc.DirRequ"
  "est\032\021.brpc.DirResponseB \n\010com.brpcB\016Buil"
  "tinService\200\001\001\210\001\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_brpc_2fbuiltin_5fservice_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::_pbi::once_flag descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_brpc_2fbuiltin_5fservice_2eproto = {
    false, false, 3296, descriptor_table_protodef_brpc_2fbuiltin_5fservice_2eproto,
    "brpc/builtin_service.proto",
    &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once, descriptor_table_brpc_2fbuiltin_5fservice_2eproto_deps, 1, 40,
    schemas, file_default_instances, TableStruct_brpc_2fbuiltin_5fservice_2eproto::offsets,
    file_level_metadata_brpc_2fbuiltin_5fservice_2eproto, file_level_enum_descriptors_brpc_2fbuiltin_5fservice_2eproto,
    file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter() {
  return &descriptor_table_brpc_2fbuiltin_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_brpc_2fbuiltin_5fservice_2eproto(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
namespace brpc {

// ===================================================================

class IndexRequest::_Internal {
 public:
};

IndexRequest::IndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.IndexRequest)
}
IndexRequest::IndexRequest(const IndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IndexRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IndexRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IndexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[0]);
}

// ===================================================================

class IndexResponse::_Internal {
 public:
};

IndexResponse::IndexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.IndexResponse)
}
IndexResponse::IndexResponse(const IndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IndexResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IndexResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IndexResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IndexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[1]);
}

// ===================================================================

class FlagsRequest::_Internal {
 public:
};

FlagsRequest::FlagsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.FlagsRequest)
}
FlagsRequest::FlagsRequest(const FlagsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.FlagsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FlagsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FlagsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FlagsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[2]);
}

// ===================================================================

class FlagsResponse::_Internal {
 public:
};

FlagsResponse::FlagsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.FlagsResponse)
}
FlagsResponse::FlagsResponse(const FlagsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.FlagsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FlagsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FlagsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FlagsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[3]);
}

// ===================================================================

class VersionRequest::_Internal {
 public:
};

VersionRequest::VersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VersionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VersionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[4]);
}

// ===================================================================

class VersionResponse::_Internal {
 public:
};

VersionResponse::VersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VersionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VersionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[5]);
}

// ===================================================================

class HealthRequest::_Internal {
 public:
};

HealthRequest::HealthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.HealthRequest)
}
HealthRequest::HealthRequest(const HealthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HealthRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HealthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HealthRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HealthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[6]);
}

// ===================================================================

class HealthResponse::_Internal {
 public:
};

HealthResponse::HealthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.HealthResponse)
}
HealthResponse::HealthResponse(const HealthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HealthResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HealthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HealthResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HealthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[7]);
}

// ===================================================================

class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.StatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[8]);
}

// ===================================================================

class StatusResponse::_Internal {
 public:
};

StatusResponse::StatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.StatusResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[9]);
}

// ===================================================================

class ProtobufsRequest::_Internal {
 public:
};

ProtobufsRequest::ProtobufsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ProtobufsRequest)
}
ProtobufsRequest::ProtobufsRequest(const ProtobufsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProtobufsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtobufsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtobufsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ProtobufsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[10]);
}

// ===================================================================

class ProtobufsResponse::_Internal {
 public:
};

ProtobufsResponse::ProtobufsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ProtobufsResponse)
}
ProtobufsResponse::ProtobufsResponse(const ProtobufsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProtobufsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtobufsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtobufsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ProtobufsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[11]);
}

// ===================================================================

class ConnectionsRequest::_Internal {
 public:
};

ConnectionsRequest::ConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ConnectionsRequest)
}
ConnectionsRequest::ConnectionsRequest(const ConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ConnectionsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConnectionsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ConnectionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[12]);
}

// ===================================================================

class ConnectionsResponse::_Internal {
 public:
};

ConnectionsResponse::ConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ConnectionsResponse)
}
ConnectionsResponse::ConnectionsResponse(const ConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ConnectionsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConnectionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConnectionsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ConnectionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[13]);
}

// ===================================================================

class ListRequest::_Internal {
 public:
};

ListRequest::ListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ListRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[14]);
}

// ===================================================================

class ListResponse::_Internal {
 public:
};

void ListResponse::clear_service() {
  _impl_.service_.Clear();
}
ListResponse::ListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:brpc.ListResponse)
}
ListResponse::ListResponse(const ListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_.service_){from._impl_.service_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ListResponse)
}

inline void ListResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.service_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListResponse::~ListResponse() {
  // @@protoc_insertion_point(destructor:brpc.ListResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_.~RepeatedPtrField();
}

void ListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.ServiceDescriptorProto service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.ServiceDescriptorProto service = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_service_size()); i < n; i++) {
    const auto& repfield = this->_internal_service(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ListResponse)
  return target;
}

size_t ListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.ServiceDescriptorProto service = 1;
  total_size += 1UL * this->_internal_service_size();
  for (const auto& msg : this->_impl_.service_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListResponse::GetClassData() const { return &_class_data_; }

void ListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListResponse *>(to)->MergeFrom(
      static_cast<const ListResponse &>(from));
}


void ListResponse::MergeFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _impl_.service_.MergeFrom(from._impl_.service_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListResponse::CopyFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.service_))
    return false;
  return true;
}

void ListResponse::InternalSwap(ListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_.InternalSwap(&other->_impl_.service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[15]);
}

// ===================================================================

class VarsRequest::_Internal {
 public:
};

VarsRequest::VarsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VarsRequest)
}
VarsRequest::VarsRequest(const VarsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VarsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VarsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VarsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VarsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[16]);
}

// ===================================================================

class VarsResponse::_Internal {
 public:
};

VarsResponse::VarsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VarsResponse)
}
VarsResponse::VarsResponse(const VarsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VarsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VarsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VarsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VarsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[17]);
}

// ===================================================================

class BthreadsRequest::_Internal {
 public:
};

BthreadsRequest::BthreadsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.BthreadsRequest)
}
BthreadsRequest::BthreadsRequest(const BthreadsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BthreadsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BthreadsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BthreadsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BthreadsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[18]);
}

// ===================================================================

class BthreadsResponse::_Internal {
 public:
};

BthreadsResponse::BthreadsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.BthreadsResponse)
}
BthreadsResponse::BthreadsResponse(const BthreadsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BthreadsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BthreadsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BthreadsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BthreadsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[19]);
}

// ===================================================================

class IdsRequest::_Internal {
 public:
};

IdsRequest::IdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.IdsRequest)
}
IdsRequest::IdsRequest(const IdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IdsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IdsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[20]);
}

// ===================================================================

class IdsResponse::_Internal {
 public:
};

IdsResponse::IdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.IdsResponse)
}
IdsResponse::IdsResponse(const IdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IdsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IdsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[21]);
}

// ===================================================================

class SocketsRequest::_Internal {
 public:
};

SocketsRequest::SocketsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.SocketsRequest)
}
SocketsRequest::SocketsRequest(const SocketsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.SocketsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SocketsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SocketsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SocketsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[22]);
}

// ===================================================================

class SocketsResponse::_Internal {
 public:
};

SocketsResponse::SocketsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.SocketsResponse)
}
SocketsResponse::SocketsResponse(const SocketsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.SocketsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SocketsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SocketsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SocketsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[23]);
}

// ===================================================================

class RpczRequest::_Internal {
 public:
};

RpczRequest::RpczRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.RpczRequest)
}
RpczRequest::RpczRequest(const RpczRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RpczRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpczRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpczRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RpczRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[24]);
}

// ===================================================================

class RpczResponse::_Internal {
 public:
};

RpczResponse::RpczResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.RpczResponse)
}
RpczResponse::RpczResponse(const RpczResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RpczResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpczResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpczResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RpczResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[25]);
}

// ===================================================================

class ThreadsRequest::_Internal {
 public:
};

ThreadsRequest::ThreadsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ThreadsRequest)
}
ThreadsRequest::ThreadsRequest(const ThreadsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ThreadsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThreadsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThreadsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ThreadsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[26]);
}

// ===================================================================

class ThreadsResponse::_Internal {
 public:
};

ThreadsResponse::ThreadsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ThreadsResponse)
}
ThreadsResponse::ThreadsResponse(const ThreadsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ThreadsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThreadsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThreadsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ThreadsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[27]);
}

// ===================================================================

class DirRequest::_Internal {
 public:
};

DirRequest::DirRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.DirRequest)
}
DirRequest::DirRequest(const DirRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.DirRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DirRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DirRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DirRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[28]);
}

// ===================================================================

class DirResponse::_Internal {
 public:
};

DirResponse::DirResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.DirResponse)
}
DirResponse::DirResponse(const DirResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.DirResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DirResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DirResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DirResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[29]);
}

// ===================================================================

class VLogRequest::_Internal {
 public:
};

VLogRequest::VLogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VLogRequest)
}
VLogRequest::VLogRequest(const VLogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VLogRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VLogRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VLogRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VLogRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[30]);
}

// ===================================================================

class VLogResponse::_Internal {
 public:
};

VLogResponse::VLogResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.VLogResponse)
}
VLogResponse::VLogResponse(const VLogResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VLogResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VLogResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VLogResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata VLogResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[31]);
}

// ===================================================================

class MetricsRequest::_Internal {
 public:
};

MetricsRequest::MetricsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.MetricsRequest)
}
MetricsRequest::MetricsRequest(const MetricsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MetricsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetricsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetricsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MetricsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[32]);
}

// ===================================================================

class MetricsResponse::_Internal {
 public:
};

MetricsResponse::MetricsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.MetricsResponse)
}
MetricsResponse::MetricsResponse(const MetricsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MetricsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetricsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetricsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MetricsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[33]);
}

// ===================================================================

class BadMethodRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<BadMethodRequest>()._impl_._has_bits_);
  static void set_has_service_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BadMethodRequest::BadMethodRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:brpc.BadMethodRequest)
}
BadMethodRequest::BadMethodRequest(const BadMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.service_name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_service_name()) {
    _impl_.service_name_.Set(from._internal_service_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:brpc.BadMethodRequest)
}

inline void BadMethodRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.service_name_){}
  };
  _impl_.service_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.service_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BadMethodRequest::~BadMethodRequest() {
  // @@protoc_insertion_point(destructor:brpc.BadMethodRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BadMethodRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.service_name_.Destroy();
}

void BadMethodRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BadMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.BadMethodRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.service_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BadMethodRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "brpc.BadMethodRequest.service_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BadMethodRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:brpc.BadMethodRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string service_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "brpc.BadMethodRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.BadMethodRequest)
  return target;
}

size_t BadMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.BadMethodRequest)
  size_t total_size = 0;

  // required string service_name = 1;
  if (_internal_has_service_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BadMethodRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BadMethodRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BadMethodRequest::GetClassData() const { return &_class_data_; }

void BadMethodRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BadMethodRequest *>(to)->MergeFrom(
      static_cast<const BadMethodRequest &>(from));
}


void BadMethodRequest::MergeFrom(const BadMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.BadMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_service_name()) {
    _internal_set_service_name(from._internal_service_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BadMethodRequest::CopyFrom(const BadMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.BadMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadMethodRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void BadMethodRequest::InternalSwap(BadMethodRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.service_name_, lhs_arena,
      &other->_impl_.service_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BadMethodRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[34]);
}

// ===================================================================

class BadMethodResponse::_Internal {
 public:
};

BadMethodResponse::BadMethodResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.BadMethodResponse)
}
BadMethodResponse::BadMethodResponse(const BadMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BadMethodResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BadMethodResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BadMethodResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BadMethodResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[35]);
}

// ===================================================================

class ProfileRequest::_Internal {
 public:
};

ProfileRequest::ProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ProfileRequest)
}
ProfileRequest::ProfileRequest(const ProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProfileRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProfileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProfileRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ProfileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[36]);
}

// ===================================================================

class ProfileResponse::_Internal {
 public:
};

ProfileResponse::ProfileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.ProfileResponse)
}
ProfileResponse::ProfileResponse(const ProfileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProfileResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProfileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProfileResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ProfileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[37]);
}

// ===================================================================

class HotspotsRequest::_Internal {
 public:
};

HotspotsRequest::HotspotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.HotspotsRequest)
}
HotspotsRequest::HotspotsRequest(const HotspotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HotspotsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HotspotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HotspotsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HotspotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[38]);
}

// ===================================================================

class HotspotsResponse::_Internal {
 public:
};

HotspotsResponse::HotspotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:brpc.HotspotsResponse)
}
HotspotsResponse::HotspotsResponse(const HotspotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HotspotsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HotspotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HotspotsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HotspotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_getter, &descriptor_table_brpc_2fbuiltin_5fservice_2eproto_once,
      file_level_metadata_brpc_2fbuiltin_5fservice_2eproto[39]);
}

// ===================================================================

index::~index() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* index::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* index::GetDescriptor() {
  return descriptor();
}

void index::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::IndexRequest*,
                         ::brpc::IndexResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void index::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::IndexRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::IndexResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& index::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IndexRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& index::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IndexResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

index_Stub::index_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
index_Stub::index_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
index_Stub::~index_Stub() {
  if (owns_channel_) delete channel_;
}

void index_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::IndexRequest* request,
                              ::brpc::IndexResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

version::~version() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* version::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[1];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* version::GetDescriptor() {
  return descriptor();
}

void version::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::VersionRequest*,
                         ::brpc::VersionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void version::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[1]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::VersionRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::VersionResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& version::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VersionRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& version::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VersionResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

version_Stub::version_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
version_Stub::version_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
version_Stub::~version_Stub() {
  if (owns_channel_) delete channel_;
}

void version_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::VersionRequest* request,
                              ::brpc::VersionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

health::~health() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* health::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[2];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* health::GetDescriptor() {
  return descriptor();
}

void health::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HealthRequest*,
                         ::brpc::HealthResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void health::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[2]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HealthRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HealthResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& health::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HealthRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& health::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HealthResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

health_Stub::health_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
health_Stub::health_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
health_Stub::~health_Stub() {
  if (owns_channel_) delete channel_;
}

void health_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HealthRequest* request,
                              ::brpc::HealthResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

status::~status() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* status::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[3];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* status::GetDescriptor() {
  return descriptor();
}

void status::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::StatusRequest*,
                         ::brpc::StatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void status::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[3]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::StatusRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::StatusResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& status::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::StatusRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& status::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::StatusResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

status_Stub::status_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
status_Stub::status_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
status_Stub::~status_Stub() {
  if (owns_channel_) delete channel_;
}

void status_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::StatusRequest* request,
                              ::brpc::StatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

protobufs::~protobufs() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* protobufs::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[4];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* protobufs::GetDescriptor() {
  return descriptor();
}

void protobufs::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProtobufsRequest*,
                         ::brpc::ProtobufsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void protobufs::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[4]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProtobufsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProtobufsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& protobufs::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProtobufsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& protobufs::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProtobufsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

protobufs_Stub::protobufs_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
protobufs_Stub::protobufs_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
protobufs_Stub::~protobufs_Stub() {
  if (owns_channel_) delete channel_;
}

void protobufs_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProtobufsRequest* request,
                              ::brpc::ProtobufsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

connections::~connections() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* connections::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[5];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* connections::GetDescriptor() {
  return descriptor();
}

void connections::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ConnectionsRequest*,
                         ::brpc::ConnectionsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void connections::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[5]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ConnectionsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ConnectionsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& connections::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ConnectionsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& connections::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ConnectionsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

connections_Stub::connections_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
connections_Stub::connections_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
connections_Stub::~connections_Stub() {
  if (owns_channel_) delete channel_;
}

void connections_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ConnectionsRequest* request,
                              ::brpc::ConnectionsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

list::~list() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* list::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[6];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* list::GetDescriptor() {
  return descriptor();
}

void list::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ListRequest*,
                         ::brpc::ListResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void list::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[6]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ListRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ListResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& list::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ListRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& list::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ListResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

list_Stub::list_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
list_Stub::list_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
list_Stub::~list_Stub() {
  if (owns_channel_) delete channel_;
}

void list_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ListRequest* request,
                              ::brpc::ListResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

threads::~threads() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* threads::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[7];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* threads::GetDescriptor() {
  return descriptor();
}

void threads::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ThreadsRequest*,
                         ::brpc::ThreadsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void threads::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[7]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ThreadsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ThreadsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& threads::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ThreadsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& threads::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ThreadsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

threads_Stub::threads_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
threads_Stub::threads_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
threads_Stub::~threads_Stub() {
  if (owns_channel_) delete channel_;
}

void threads_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ThreadsRequest* request,
                              ::brpc::ThreadsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

vlog::~vlog() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* vlog::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[8];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* vlog::GetDescriptor() {
  return descriptor();
}

void vlog::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::VLogRequest*,
                         ::brpc::VLogResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void vlog::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[8]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::VLogRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::VLogResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& vlog::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VLogRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& vlog::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VLogResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

vlog_Stub::vlog_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
vlog_Stub::vlog_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
vlog_Stub::~vlog_Stub() {
  if (owns_channel_) delete channel_;
}

void vlog_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::VLogRequest* request,
                              ::brpc::VLogResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

bthreads::~bthreads() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* bthreads::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[9];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* bthreads::GetDescriptor() {
  return descriptor();
}

void bthreads::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::BthreadsRequest*,
                         ::brpc::BthreadsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void bthreads::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[9]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::BthreadsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::BthreadsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& bthreads::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BthreadsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& bthreads::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BthreadsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

bthreads_Stub::bthreads_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
bthreads_Stub::bthreads_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
bthreads_Stub::~bthreads_Stub() {
  if (owns_channel_) delete channel_;
}

void bthreads_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::BthreadsRequest* request,
                              ::brpc::BthreadsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

ids::~ids() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ids::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[10];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* ids::GetDescriptor() {
  return descriptor();
}

void ids::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::IdsRequest*,
                         ::brpc::IdsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void ids::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[10]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::IdsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::IdsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ids::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IdsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& ids::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IdsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ids_Stub::ids_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ids_Stub::ids_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
ids_Stub::~ids_Stub() {
  if (owns_channel_) delete channel_;
}

void ids_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::IdsRequest* request,
                              ::brpc::IdsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

sockets::~sockets() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* sockets::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[11];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* sockets::GetDescriptor() {
  return descriptor();
}

void sockets::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::SocketsRequest*,
                         ::brpc::SocketsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void sockets::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[11]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::SocketsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::SocketsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& sockets::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::SocketsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& sockets::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::SocketsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

sockets_Stub::sockets_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
sockets_Stub::sockets_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
sockets_Stub::~sockets_Stub() {
  if (owns_channel_) delete channel_;
}

void sockets_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::SocketsRequest* request,
                              ::brpc::SocketsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

brpc_metrics::~brpc_metrics() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* brpc_metrics::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[12];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* brpc_metrics::GetDescriptor() {
  return descriptor();
}

void brpc_metrics::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::MetricsRequest*,
                         ::brpc::MetricsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void brpc_metrics::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[12]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::MetricsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::MetricsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& brpc_metrics::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::MetricsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& brpc_metrics::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::MetricsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

brpc_metrics_Stub::brpc_metrics_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
brpc_metrics_Stub::brpc_metrics_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
brpc_metrics_Stub::~brpc_metrics_Stub() {
  if (owns_channel_) delete channel_;
}

void brpc_metrics_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::MetricsRequest* request,
                              ::brpc::MetricsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

badmethod::~badmethod() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* badmethod::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[13];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* badmethod::GetDescriptor() {
  return descriptor();
}

void badmethod::no_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::BadMethodRequest*,
                         ::brpc::BadMethodResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method no_method() not implemented.");
  done->Run();
}

void badmethod::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[13]);
  switch(method->index()) {
    case 0:
      no_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::BadMethodRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::BadMethodResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& badmethod::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BadMethodRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& badmethod::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BadMethodResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

badmethod_Stub::badmethod_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
badmethod_Stub::badmethod_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
badmethod_Stub::~badmethod_Stub() {
  if (owns_channel_) delete channel_;
}

void badmethod_Stub::no_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::BadMethodRequest* request,
                              ::brpc::BadMethodResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

pprof::~pprof() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* pprof::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[14];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* pprof::GetDescriptor() {
  return descriptor();
}

void pprof::profile(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method profile() not implemented.");
  done->Run();
}

void pprof::contention(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention() not implemented.");
  done->Run();
}

void pprof::heap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap() not implemented.");
  done->Run();
}

void pprof::symbol(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method symbol() not implemented.");
  done->Run();
}

void pprof::cmdline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cmdline() not implemented.");
  done->Run();
}

void pprof::growth(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth() not implemented.");
  done->Run();
}

void pprof::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[14]);
  switch(method->index()) {
    case 0:
      profile(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    case 1:
      contention(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    case 2:
      heap(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    case 3:
      symbol(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    case 4:
      cmdline(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    case 5:
      growth(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::ProfileRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::ProfileResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& pprof::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProfileRequest::default_instance();
    case 1:
      return ::brpc::ProfileRequest::default_instance();
    case 2:
      return ::brpc::ProfileRequest::default_instance();
    case 3:
      return ::brpc::ProfileRequest::default_instance();
    case 4:
      return ::brpc::ProfileRequest::default_instance();
    case 5:
      return ::brpc::ProfileRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& pprof::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProfileResponse::default_instance();
    case 1:
      return ::brpc::ProfileResponse::default_instance();
    case 2:
      return ::brpc::ProfileResponse::default_instance();
    case 3:
      return ::brpc::ProfileResponse::default_instance();
    case 4:
      return ::brpc::ProfileResponse::default_instance();
    case 5:
      return ::brpc::ProfileResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

pprof_Stub::pprof_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
pprof_Stub::pprof_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
pprof_Stub::~pprof_Stub() {
  if (owns_channel_) delete channel_;
}

void pprof_Stub::profile(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void pprof_Stub::contention(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void pprof_Stub::heap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void pprof_Stub::symbol(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void pprof_Stub::cmdline(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void pprof_Stub::growth(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
// ===================================================================

hotspots::~hotspots() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* hotspots::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[15];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* hotspots::GetDescriptor() {
  return descriptor();
}

void hotspots::cpu(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cpu() not implemented.");
  done->Run();
}

void hotspots::cpu_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cpu_non_responsive() not implemented.");
  done->Run();
}

void hotspots::heap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap() not implemented.");
  done->Run();
}

void hotspots::heap_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap_non_responsive() not implemented.");
  done->Run();
}

void hotspots::growth(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth() not implemented.");
  done->Run();
}

void hotspots::growth_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth_non_responsive() not implemented.");
  done->Run();
}

void hotspots::contention(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention() not implemented.");
  done->Run();
}

void hotspots::contention_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention_non_responsive() not implemented.");
  done->Run();
}

void hotspots::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[15]);
  switch(method->index()) {
    case 0:
      cpu(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 1:
      cpu_non_responsive(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 2:
      heap(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 3:
      heap_non_responsive(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 4:
      growth(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 5:
      growth_non_responsive(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 6:
      contention(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    case 7:
      contention_non_responsive(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::HotspotsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::HotspotsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& hotspots::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HotspotsRequest::default_instance();
    case 1:
      return ::brpc::HotspotsRequest::default_instance();
    case 2:
      return ::brpc::HotspotsRequest::default_instance();
    case 3:
      return ::brpc::HotspotsRequest::default_instance();
    case 4:
      return ::brpc::HotspotsRequest::default_instance();
    case 5:
      return ::brpc::HotspotsRequest::default_instance();
    case 6:
      return ::brpc::HotspotsRequest::default_instance();
    case 7:
      return ::brpc::HotspotsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& hotspots::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HotspotsResponse::default_instance();
    case 1:
      return ::brpc::HotspotsResponse::default_instance();
    case 2:
      return ::brpc::HotspotsResponse::default_instance();
    case 3:
      return ::brpc::HotspotsResponse::default_instance();
    case 4:
      return ::brpc::HotspotsResponse::default_instance();
    case 5:
      return ::brpc::HotspotsResponse::default_instance();
    case 6:
      return ::brpc::HotspotsResponse::default_instance();
    case 7:
      return ::brpc::HotspotsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

hotspots_Stub::hotspots_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
hotspots_Stub::hotspots_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
hotspots_Stub::~hotspots_Stub() {
  if (owns_channel_) delete channel_;
}

void hotspots_Stub::cpu(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void hotspots_Stub::cpu_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void hotspots_Stub::heap(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void hotspots_Stub::heap_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void hotspots_Stub::growth(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void hotspots_Stub::growth_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void hotspots_Stub::contention(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void hotspots_Stub::contention_non_responsive(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
// ===================================================================

flags::~flags() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* flags::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[16];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* flags::GetDescriptor() {
  return descriptor();
}

void flags::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::FlagsRequest*,
                         ::brpc::FlagsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void flags::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[16]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::FlagsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::FlagsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& flags::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::FlagsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& flags::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::FlagsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

flags_Stub::flags_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
flags_Stub::flags_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
flags_Stub::~flags_Stub() {
  if (owns_channel_) delete channel_;
}

void flags_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::FlagsRequest* request,
                              ::brpc::FlagsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

vars::~vars() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* vars::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[17];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* vars::GetDescriptor() {
  return descriptor();
}

void vars::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::VarsRequest*,
                         ::brpc::VarsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void vars::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[17]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::VarsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::VarsResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& vars::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VarsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& vars::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VarsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

vars_Stub::vars_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
vars_Stub::vars_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
vars_Stub::~vars_Stub() {
  if (owns_channel_) delete channel_;
}

void vars_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::VarsRequest* request,
                              ::brpc::VarsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

rpcz::~rpcz() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* rpcz::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[18];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* rpcz::GetDescriptor() {
  return descriptor();
}

void rpcz::enable(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method enable() not implemented.");
  done->Run();
}

void rpcz::disable(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method disable() not implemented.");
  done->Run();
}

void rpcz::stats(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method stats() not implemented.");
  done->Run();
}

void rpcz::hex_log_id(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method hex_log_id() not implemented.");
  done->Run();
}

void rpcz::dec_log_id(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method dec_log_id() not implemented.");
  done->Run();
}

void rpcz::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void rpcz::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[18]);
  switch(method->index()) {
    case 0:
      enable(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    case 1:
      disable(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    case 2:
      stats(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    case 3:
      hex_log_id(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    case 4:
      dec_log_id(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    case 5:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::RpczRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::RpczResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& rpcz::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::RpczRequest::default_instance();
    case 1:
      return ::brpc::RpczRequest::default_instance();
    case 2:
      return ::brpc::RpczRequest::default_instance();
    case 3:
      return ::brpc::RpczRequest::default_instance();
    case 4:
      return ::brpc::RpczRequest::default_instance();
    case 5:
      return ::brpc::RpczRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& rpcz::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::RpczResponse::default_instance();
    case 1:
      return ::brpc::RpczResponse::default_instance();
    case 2:
      return ::brpc::RpczResponse::default_instance();
    case 3:
      return ::brpc::RpczResponse::default_instance();
    case 4:
      return ::brpc::RpczResponse::default_instance();
    case 5:
      return ::brpc::RpczResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

rpcz_Stub::rpcz_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
rpcz_Stub::rpcz_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
rpcz_Stub::~rpcz_Stub() {
  if (owns_channel_) delete channel_;
}

void rpcz_Stub::enable(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void rpcz_Stub::disable(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void rpcz_Stub::stats(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void rpcz_Stub::hex_log_id(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void rpcz_Stub::dec_log_id(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void rpcz_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
// ===================================================================

dir::~dir() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* dir::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_brpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[19];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* dir::GetDescriptor() {
  return descriptor();
}

void dir::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::brpc::DirRequest*,
                         ::brpc::DirResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void dir::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_brpc_2fbuiltin_5fservice_2eproto[19]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::brpc::DirRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::brpc::DirResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& dir::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::DirRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& dir::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::DirResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

dir_Stub::dir_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
dir_Stub::dir_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
dir_Stub::~dir_Stub() {
  if (owns_channel_) delete channel_;
}

void dir_Stub::default_method(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::brpc::DirRequest* request,
                              ::brpc::DirResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::brpc::IndexRequest*
Arena::CreateMaybeMessage< ::brpc::IndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::IndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::IndexResponse*
Arena::CreateMaybeMessage< ::brpc::IndexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::IndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::FlagsRequest*
Arena::CreateMaybeMessage< ::brpc::FlagsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::FlagsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::FlagsResponse*
Arena::CreateMaybeMessage< ::brpc::FlagsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::FlagsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VersionRequest*
Arena::CreateMaybeMessage< ::brpc::VersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VersionResponse*
Arena::CreateMaybeMessage< ::brpc::VersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::HealthRequest*
Arena::CreateMaybeMessage< ::brpc::HealthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::HealthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::HealthResponse*
Arena::CreateMaybeMessage< ::brpc::HealthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::HealthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::StatusRequest*
Arena::CreateMaybeMessage< ::brpc::StatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::StatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::StatusResponse*
Arena::CreateMaybeMessage< ::brpc::StatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::StatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ProtobufsRequest*
Arena::CreateMaybeMessage< ::brpc::ProtobufsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ProtobufsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ProtobufsResponse*
Arena::CreateMaybeMessage< ::brpc::ProtobufsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ProtobufsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ConnectionsRequest*
Arena::CreateMaybeMessage< ::brpc::ConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ConnectionsResponse*
Arena::CreateMaybeMessage< ::brpc::ConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ConnectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ListRequest*
Arena::CreateMaybeMessage< ::brpc::ListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ListResponse*
Arena::CreateMaybeMessage< ::brpc::ListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VarsRequest*
Arena::CreateMaybeMessage< ::brpc::VarsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VarsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VarsResponse*
Arena::CreateMaybeMessage< ::brpc::VarsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VarsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::BthreadsRequest*
Arena::CreateMaybeMessage< ::brpc::BthreadsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::BthreadsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::BthreadsResponse*
Arena::CreateMaybeMessage< ::brpc::BthreadsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::BthreadsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::IdsRequest*
Arena::CreateMaybeMessage< ::brpc::IdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::IdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::IdsResponse*
Arena::CreateMaybeMessage< ::brpc::IdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::IdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::SocketsRequest*
Arena::CreateMaybeMessage< ::brpc::SocketsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::SocketsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::SocketsResponse*
Arena::CreateMaybeMessage< ::brpc::SocketsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::SocketsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::RpczRequest*
Arena::CreateMaybeMessage< ::brpc::RpczRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::RpczRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::RpczResponse*
Arena::CreateMaybeMessage< ::brpc::RpczResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::RpczResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ThreadsRequest*
Arena::CreateMaybeMessage< ::brpc::ThreadsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ThreadsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ThreadsResponse*
Arena::CreateMaybeMessage< ::brpc::ThreadsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ThreadsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::DirRequest*
Arena::CreateMaybeMessage< ::brpc::DirRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::DirRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::DirResponse*
Arena::CreateMaybeMessage< ::brpc::DirResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::DirResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VLogRequest*
Arena::CreateMaybeMessage< ::brpc::VLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::VLogResponse*
Arena::CreateMaybeMessage< ::brpc::VLogResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::VLogResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::MetricsRequest*
Arena::CreateMaybeMessage< ::brpc::MetricsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::MetricsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::MetricsResponse*
Arena::CreateMaybeMessage< ::brpc::MetricsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::MetricsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::BadMethodRequest*
Arena::CreateMaybeMessage< ::brpc::BadMethodRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::BadMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::BadMethodResponse*
Arena::CreateMaybeMessage< ::brpc::BadMethodResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::BadMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ProfileRequest*
Arena::CreateMaybeMessage< ::brpc::ProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::ProfileResponse*
Arena::CreateMaybeMessage< ::brpc::ProfileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::ProfileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::HotspotsRequest*
Arena::CreateMaybeMessage< ::brpc::HotspotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::HotspotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::brpc::HotspotsResponse*
Arena::CreateMaybeMessage< ::brpc::HotspotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::brpc::HotspotsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
